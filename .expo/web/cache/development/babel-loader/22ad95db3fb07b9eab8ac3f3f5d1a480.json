{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mizobuchirei/git/React-native-app/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { WebView } from 'react-native-webview';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  common: {\n    paddingTop: 50\n  },\n  logo: {\n    width: 300,\n    height: 200\n  },\n  text_input: {\n    width: \"100%\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ccc\"\n  },\n  text_input_wrapper: {\n    backgroundColor: '#F5FCFF'\n  }\n});\n\nvar _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n\nvar _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n\nexport default function App() {\n  var data = [{\n    str: 'Rei Mizobuchi',\n    key: 'boy'\n  }, {\n    str: 'Nanami Tomatsu',\n    key: 'girl'\n  }];\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return console.warn('pressed!');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"./assets/react-native-logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), React.createElement(TextInput, {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottomWidth: 1,\n      borderColor: '#ccc'\n    },\n    value: input,\n    onChangeText: function onChangeText(input) {\n      return setInput(input);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      pbcopy();\n    },\n    title: \"save to ClipBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, text), React.createElement(Button, {\n    onPress: function onPress() {\n      getpb();\n    },\n    title: \"get from ClipBoard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction pbcopy() {\n  Clipboard.setString(input);\n}\n\nfunction getpb() {\n  var text;\n  return _regeneratorRuntime.async(function getpb$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Clipboard.getString());\n\n        case 2:\n          text = _context.sent;\n          setText(text);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/mizobuchirei/git/React-native-app/App.js"],"names":["StatusBar","React","Component","useState","WebView","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","common","paddingTop","logo","width","height","text_input","borderBottomWidth","borderBottomColor","text_input_wrapper","text","setText","input","setInput","App","data","str","key","console","warn","require","textAlign","borderColor","pbcopy","getpb","Clipboard","setString","getString"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {Component, useState} from 'react';\nimport { ActivityIndicator, Button, Clipboard, FlatList, Share, StyleSheet, Text, TextInput, TouchableOpacity, Image, View } from 'react-native';\nimport { WebView } from 'react-native-webview';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  common: {\n    paddingTop: 50\n  },\n  logo: {\n    width: 300,\n    height:  200\n  },\n  text_input: {\n    width: \"100%\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ccc\"\n  },\n  text_input_wrapper: {\n    backgroundColor: '#F5FCFF'\n  },\n});\n\nconst [text, setText] = useState(\"\");\nconst [input, setInput] = useState(\"\");\n\nexport default function App() {\n\n  const data = [\n    {str: 'Rei Mizobuchi', key: 'boy'},\n    {str: 'Nanami Tomatsu', key: 'girl'}\n  ]\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={() => console.warn('pressed!')}>\n        <Image style={styles.logo}source={require('./assets/react-native-logo.png')}/>\n      </TouchableOpacity>\n      <TextInput style={{width: '100%', textAlign: 'center', borderBottomWidth: 1, borderColor: '#ccc'}} value={input} onChangeText={input => setInput(input)}/>\n      <Button onPress={() => {pbcopy()}} title=\"save to ClipBoard\"/>\n      <Text>{text}</Text>\n      <Button onPress={() => {getpb()}} title=\"get from ClipBoard\"/>\n    </View>\n  );\n}\n\nfunction pbcopy() {\n  Clipboard.setString(input);\n}\n\nasync function getpb() {\n  const text = await Clipboard.getString();\n  setText(text);\n}"]},"metadata":{},"sourceType":"module"}